Index: GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/game/data/PlayerData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/game/data/PlayerData.java b/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/game/data/PlayerData.java
--- a/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/game/data/PlayerData.java	(revision a4b9255ce98a02382f0546a36a5e48f7ed667f77)
+++ b/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/game/data/PlayerData.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -7,6 +7,7 @@
 import xyz.n7mn.dev.gunwar.entity.HitEntity;
 import xyz.n7mn.dev.gunwar.item.GwGunItem;
 import xyz.n7mn.dev.gunwar.item.GwItem;
+import xyz.n7mn.dev.gunwar.util.Angle;
 import xyz.n7mn.dev.gunwar.util.PlayerWatcher;
 
 public interface PlayerData extends EntityData {
@@ -27,6 +28,10 @@
 
     public boolean isDead();
 
+    public boolean isZoom();
+
+    public void setZoom(boolean zoom, float zoomLevel);
+
     public void setDead(boolean dead);
 
     public void setClickable(boolean clickable);
@@ -51,6 +56,8 @@
     public HitEntity drawParticleLine(Particle particle, double startX, double startY, double startZ, double far,
                                       double separateX, double separateY, double separateZ, GwGunItem gun);
 
+    public HitEntity drawParticleLine(Particle particle, double startX, double startY, double startZ, double far, Angle angle, double separate, GwGunItem gun);
+
     public void giveItem(GwItem item);
 
 }
Index: GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/item/items/GwItemAK47.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/item/items/GwItemAK47.java b/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/item/items/GwItemAK47.java
--- a/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/item/items/GwItemAK47.java	(revision a4b9255ce98a02382f0546a36a5e48f7ed667f77)
+++ b/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/item/items/GwItemAK47.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -15,7 +15,7 @@
         super(0, Material.IRON_HOE, "AK47", "AK-47", "0f00a46e", Arrays.asList("" +
                         ChatColor.WHITE + "初期武器のAK-47。ソ連が開発したアサルトライフル。攻撃力や精度、ノックバックなどから考えて割と使いやすい。"),
                 10F, 13F, 30, 30, 0.6F, 0F, 100L,
-                4L, 30F, 50F, 300F, 1.5F, GwGunType.ASSAULT_RIFLE);
+                4L, 30F, 50F, 300F, 0.8F, GwGunType.ASSAULT_RIFLE);
     }
 
 }
Index: GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/util/Angle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/util/Angle.java b/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/util/Angle.java
new file mode 100644
--- /dev/null	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
+++ b/GunWarAPI/src/main/java/xyz/n7mn/dev/gunwar/util/Angle.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -0,0 +1,20 @@
+package xyz.n7mn.dev.gunwar.util;
+
+public class Angle {
+
+    private final double yaw;
+    private final double pitch;
+
+    public Angle(double yaw, double pitch) {
+        this.yaw = yaw;
+        this.pitch = pitch;
+    }
+
+    public double getYaw() {
+        return yaw;
+    }
+
+    public double getPitch() {
+        return pitch;
+    }
+}
Index: GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarGunData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarGunData.java b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarGunData.java
--- a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarGunData.java	(revision a4b9255ce98a02382f0546a36a5e48f7ed667f77)
+++ b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarGunData.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -11,6 +11,7 @@
 import xyz.n7mn.dev.gunwar.entity.HitEntity;
 import xyz.n7mn.dev.gunwar.item.GwGunItem;
 import xyz.n7mn.dev.gunwar.item.GwItem;
+import xyz.n7mn.dev.gunwar.util.Angle;
 
 import java.util.*;
 
@@ -63,12 +64,12 @@
                 accuracy = ((GwGunItem) getGwItem()).getAccuracyOnSneak();
             }
 
-            double separateX = random.nextDouble() * (2 / accuracy) - (1 / accuracy);
-            double separateY = random.nextDouble() * (2 / accuracy) - (1 / accuracy);
+            double yaw = random.nextDouble() * (60 / accuracy) - (30 / accuracy);
+            double pitch = random.nextDouble() * (60 / accuracy) - (30 / accuracy);
 
             HitEntity hitEntity = GunWar.getGame().getPlayerData(getOwner()).drawParticleLine(
                     Particle.SMOKE_NORMAL, 0, 0, 0.25, ((GwGunItem) getGwItem()).getRange(),
-                    separateX, separateY, 0.25, (GwGunItem) getGwItem());
+                    new Angle(yaw, pitch), 0.25, (GwGunItem) getGwItem());
             if(hitEntity != null) {
                 if (hitEntity.getEntity() instanceof Player) {
                     PlayerData data = GunWar.getGame().getPlayerData((Player) hitEntity.getEntity());
Index: GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarPlayerData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarPlayerData.java b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarPlayerData.java
--- a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarPlayerData.java	(revision a4b9255ce98a02382f0546a36a5e48f7ed667f77)
+++ b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/game/data/GunWarPlayerData.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -21,6 +21,7 @@
 import xyz.n7mn.dev.gunwar.game.gamemode.GwGameModes;
 import xyz.n7mn.dev.gunwar.item.GwGunItem;
 import xyz.n7mn.dev.gunwar.item.GwItem;
+import xyz.n7mn.dev.gunwar.util.Angle;
 import xyz.n7mn.dev.gunwar.util.PlayerWatcher;
 import xyz.n7mn.dev.gunwar.util.Reference;
 
@@ -39,6 +40,8 @@
     private boolean moveable;
     private boolean dead;
     private Location loc;
+    private boolean zoom;
+    private float zoomLevel;
 
     public GunWarPlayerData(Player player) {
         super(player);
@@ -51,6 +54,8 @@
         this.moveable = true;
         this.loc = player.getLocation();
         this.dead = false;
+        this.zoom = false;
+        this.zoomLevel = 0F;
     }
 
     @Override
@@ -325,6 +330,91 @@
         }
         return null;
     }
+
+    @Override
+    public HitEntity drawParticleLine(Particle particle, double startX, double startY, double startZ,
+                                      double far, Angle angle, double separate, GwGunItem gun) {
+        double yaw = angle.getYaw();
+        double pitch = angle.getPitch();
+        double r = separate * Math.cos(pitch);
+        double separateX = r * Math.sin(yaw);
+        double separateY = separate * Math.sin(pitch);
+        double separateZ = r * Math.cos(yaw);;
+        double d = Math.sqrt(Math.pow(separateX, 2) + Math.pow(separateY, 2) + Math.pow(separateZ, 2)) * far;
+        if(startZ < d) {
+            double times = d / separate;
+            double x = startX;
+            double y = startY;
+            double z = startZ;
+            double damageMin = gun.getAttackDamage() / 1.3;
+            double hsdamageMin = gun.getHeadShotDamage() / 1.3;
+            double currentDamage = gun.getAttackDamage();
+            double currentHSDamage = gun.getHeadShotDamage();
+            double separateDamage = currentDamage - damageMin / times;
+            double separateHSDamage = currentHSDamage - hsdamageMin / times;
+            while (z < times) {
+                c(particle, x, y, z);
+                for(Entity entity : getPlayer().getNearbyEntities(gun.getRange() + 1, gun.getRange() + 1, gun.getRange() + 1)) {
+                    if(entity instanceof LivingEntity) {
+                        LivingEntity livingEntity = (LivingEntity) entity;
+                        if(livingEntity != getPlayer()) {
+                            double xmin = entity.getLocation().getX() - (entity.getWidth() / 2);
+                            double xmax = entity.getLocation().getX() + (entity.getWidth() / 2);
+                            double ymin = entity.getLocation().getY();
+                            double ymax = entity.getLocation().getY() + entity.getHeight();
+                            double zmin = entity.getLocation().getZ() - (entity.getWidth() / 2);
+                            double zmax = entity.getLocation().getZ() + (entity.getWidth() / 2);
+                            boolean condition1 = xmin <= x && xmax >= x;
+                            boolean condition2 = ymin <= y && ymax >= y;
+                            boolean condition3 = zmin <= z && zmax >= z;
+                            if (condition1 && condition2 && condition3) {
+                                double hxmin = livingEntity.getEyeLocation().getX() - (livingEntity.getEyeHeight() / 2);
+                                double hxmax = livingEntity.getEyeLocation().getX() + (livingEntity.getEyeHeight() / 2);
+                                double hymin = livingEntity.getEyeLocation().getY() - (livingEntity.getEyeHeight() / 2);
+                                double hymax = livingEntity.getEyeLocation().getY() + (livingEntity.getEyeHeight() / 2);
+                                double hzmin = livingEntity.getEyeLocation().getZ() - (livingEntity.getEyeHeight() / 2);
+                                double hzmax = livingEntity.getEyeLocation().getZ() + (livingEntity.getEyeHeight() / 2);
+                                boolean hcondition1 = hxmin <= x && hxmax >= x;
+                                boolean hcondition2 = hymin <= y && hymax >= y;
+                                boolean hcondition3 = hzmin <= z && hzmax >= z;
+                                boolean headShot = hcondition1 && hcondition2 && hcondition3;
+                                if(GunWar.getGame().getGameMode() == GwGameModes.NORMAL && ((GameModeNormal) GwGameModes.NORMAL).getMode() == GameModeNormal.Mode.TEAM) {
+                                    if (livingEntity instanceof Player) {
+                                        PlayerData data = GunWar.getGame().getPlayerData((Player) livingEntity);
+                                        if (data != null && data.getTeam() != getTeam()) {
+                                            return new HitEntity(livingEntity, headShot, headShot ? currentHSDamage : currentDamage,
+                                                    getPlayer().getEyeLocation(), new Location(livingEntity.getWorld(), x, y, z));
+                                        }
+                                    }
+                                }
+                                return new HitEntity(livingEntity, headShot, headShot ? currentHSDamage : currentDamage,
+                                        getPlayer().getEyeLocation(), new Location(livingEntity.getWorld(), x, y, z));
+                            }
+                        }
+                    }
+                }
+                Location loc = new Location(getPlayer().getWorld(), x, y, z);
+                Block block = loc.getBlock();
+                if(block != null && block.getType() != Material.AIR && block.getType() != Material.STRUCTURE_VOID) {
+                    @SuppressWarnings("deprecation")
+                    PacketPlayOutWorldEvent packet = new PacketPlayOutWorldEvent(2001,
+                            new BlockPosition(block.getLocation().getBlockX(), block.getLocation().getBlockY(), block.getLocation().getBlockZ()),
+                            block.getType().getId(), false);
+                    List<Player> players = getPlayer().getWorld().getPlayers();
+                    for(final Player p : players) {
+                        ((CraftPlayer) p).getHandle().playerConnection.sendPacket(packet);
+                    }
+                    return null;
+                }
+                x += separateX;
+                y += separateY;
+                z += separateZ;
+                currentDamage -= separateDamage;
+                currentHSDamage -= separateHSDamage;
+            }
+        }
+        return null;
+    }
 
     @Override
     public void giveItem(GwItem item) {
@@ -335,4 +425,21 @@
         getPlayer().getInventory().addItem(i);
         getPlayer().updateInventory();
     }
+
+    @Override
+    public boolean isZoom() {
+        return zoom;
+    }
+
+    @Override
+    public void setZoom(boolean zoom, float zoomLevel) {
+        this.zoom = zoom;
+        this.zoomLevel = zoomLevel;
+        if(zoom && zoomLevel > 0) {
+            double d = 0.2 - (1.2 * zoomLevel / 100);
+            player.setWalkSpeed((float) d);
+        } else {
+            player.setWalkSpeed(0.2F);
+        }
+    }
 }
Index: GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ItemListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ItemListener.java b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ItemListener.java
--- a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ItemListener.java	(revision a4b9255ce98a02382f0546a36a5e48f7ed667f77)
+++ b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ItemListener.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -7,6 +7,8 @@
 import org.bukkit.event.block.Action;
 import org.bukkit.event.player.*;
 import org.bukkit.inventory.ItemStack;
+import org.bukkit.potion.PotionEffect;
+import org.bukkit.potion.PotionEffectType;
 import org.bukkit.scheduler.BukkitRunnable;
 import xyz.n7mn.dev.gunwar.GunWar;
 import xyz.n7mn.dev.gunwar.game.data.GunData;
@@ -27,12 +29,19 @@
                     data.setClickable(true);
                 }
             }.runTaskLater(GunWar.getPlugin(), 1);
-            if(e.getAction() == Action.RIGHT_CLICK_AIR || e.getAction() == Action.RIGHT_CLICK_BLOCK) {
-                ItemData itemData = GunWar.getGame().getItemData(e.getItem());
-                if (itemData != null) {
-                    if (itemData instanceof GunData) {
-                        if (((GunData) itemData).getAmmo() <= 0) ((GunData) itemData).reload();
-                        ((GunData) itemData).fire();
+            ItemData itemData = GunWar.getGame().getItemData(e.getItem());
+            if (itemData != null) {
+                if (itemData instanceof GunData) {
+                    GunData gunData = (GunData) itemData;
+                    if(e.getAction() == Action.RIGHT_CLICK_AIR || e.getAction() == Action.RIGHT_CLICK_BLOCK) {
+                        if (gunData.getAmmo() <= 0) gunData.reload();
+                        gunData.fire();
+                    } else if(e.getAction() == Action.LEFT_CLICK_AIR || e.getAction() == Action.LEFT_CLICK_BLOCK) {
+                        if(data.isZoom()) {
+                            data.setZoom(false, 0);
+                        } else {
+                            data.setZoom(true, ((GwGunItem) gunData.getGwItem()).getZoomLevel());
+                        }
                     }
                 }
             }
@@ -54,7 +63,12 @@
     public void onSlotChange(PlayerItemHeldEvent e) {
         for(ItemStack i : e.getPlayer().getInventory().getContents()) {
             ItemData data = GunWar.getGame().getItemData(i);
-            if(data instanceof GunData) ((GunData) data).cancelReload();
+            if(data instanceof GunData) {
+                GunData gunData = (GunData) data;
+                gunData.cancelReload();
+                PlayerData pdata = GunWar.getGame().getPlayerData(e.getPlayer());
+                if(pdata != null) pdata.setZoom(false, 0);
+            }
         }
     }
 
Index: GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ServerListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ServerListener.java b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ServerListener.java
--- a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ServerListener.java	(revision a4b9255ce98a02382f0546a36a5e48f7ed667f77)
+++ b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/listeners/ServerListener.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
@@ -10,7 +10,8 @@
     @EventHandler
     public void onRegisterCommand(GunWarCommandRegisterEvent e) {
         if(e.getCommand().getName().equalsIgnoreCase("aboutgunwar") ||
-                e.getCommand().getName().equalsIgnoreCase("gunwarreload")) {
+                e.getCommand().getName().equalsIgnoreCase("gunwarreload") ||
+                e.getCommand().getName().equalsIgnoreCase("gunwaritem")) {
             if(e.getThrowable() != null) {
                 e.catchThrowable();
                 GunWar.getPlugin().getLogger().info("Failed to register command: /" + e.getCommand().getName());
Index: GunWarPlugin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/pom.xml b/GunWarPlugin/pom.xml
--- a/GunWarPlugin/pom.xml	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
+++ b/GunWarPlugin/pom.xml	(revision ecc492b46fabd6807953e8d21dd28b31a1e1e2b8)
@@ -85,8 +85,7 @@
             <groupId>com.destroystokyo.paper</groupId>
             <artifactId>paper-server</artifactId>
             <version>1.12.2-R0.1-SNAPSHOT</version>
-            <scope>system</scope>
-            <systemPath>${user.home}/Paper/patched_paper_1.12.2.jar</systemPath>
+            <scope>provided</scope>
         </dependency>
         <dependency>
             <groupId>xyz.n7mn.dev</groupId>
Index: GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/NanamiGunWar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/NanamiGunWar.java b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/NanamiGunWar.java
--- a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/NanamiGunWar.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
+++ b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/NanamiGunWar.java	(revision ecc492b46fabd6807953e8d21dd28b31a1e1e2b8)
@@ -40,7 +40,6 @@
     private SimplePluginManager pluginManager;
     private GwUtilities utilities;
     private NanamiGunWarConfiguration config;
-    public static Role role;
     public static GwMySQLPlayerDataUpdater updater;
     private GunWarGame game;
 
@@ -60,12 +59,6 @@
                 config.getConfig().getString("mysql.option", "?allowPublicKeyRetrieval=true&useSSL=false"),
                 config.getConfig().getString("mysql.username", ""),
                 config.getConfig().getString("mysql.password", "")).build();
-        role = new Role(config.getConfig().getString("mysql.host", "localhost"),
-                config.getConfig().getInt("mysql.port", 3306),
-                config.getConfig().getString("mysql.database", ""),
-                config.getConfig().getString("mysql.option", "?allowPublicKeyRetrieval=true&useSSL=false"),
-                config.getConfig().getString("mysql.username", ""),
-                config.getConfig().getString("mysql.password", ""));
         GwGameModes.registerDefault();
         game = new GunWarGame(plugin);
         GunWar.game = game;
Index: GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/commands/GunWarItemCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/commands/GunWarItemCommand.java b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/commands/GunWarItemCommand.java
--- a/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/commands/GunWarItemCommand.java	(revision 25df1f790df2940cfea95885a9d931cff406ad94)
+++ b/GunWarPlugin/src/main/java/xyz/n7mn/dev/gunwar/commands/GunWarItemCommand.java	(revision 0aafa04bc793571c8432bc09cf5dfcbed2f48854)
@@ -20,7 +20,7 @@
 public class GunWarItemCommand extends Command {
 
     public GunWarItemCommand() {
-        super("gunwaritem", "ななみ銃撃戦のアイテムを入手します。", "使用法: /gunwaritem <item>", Arrays.asList("gwitem", "gwi"));
+        super("gunwaritem", "ななみ銃撃戦のアイテムを入手します。", "使用法: /gunwaritem <player> <item>", Arrays.asList("gwitem", "gwi"));
     }
 
     @Override
@@ -64,6 +64,7 @@
         if(args.length == 2) {
             List<String> result = new ArrayList<>();
             for(GwItem i : GwItems.getRegisteredItems()) {
+                if(i.getName().startsWith(args[1]))
                 result.add(i.getName());
             }
             return result;
